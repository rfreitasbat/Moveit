{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ramon\\\\Desktop\\\\nlw_react-main\\\\src\\\\Contexts\\\\CountDownContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { ChallengesContext } from \"./ChallengesContext\";\nexport var CountdownContext = /*#__PURE__*/createContext({});\nvar countdownTimeout;\nexport function CountdownProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useContext = useContext(ChallengesContext),\n      startNewChallege = _useContext.startNewChallege;\n\n  var _useState = useState(0.05 * 60),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(false),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var _useState3 = useState(false),\n      hasFinished = _useState3[0],\n      setHasFinished = _useState3[1];\n\n  var minutes = Math.floor(time / 60);\n  var seconds = time % 60;\n\n  function startCountdown() {\n    setActive(true);\n  }\n\n  function resetCountdown() {\n    clearTimeout(countdownTimeout);\n    setActive(false);\n    setTime(0.05 * 60);\n  }\n\n  useEffect(function () {\n    if (active && time > 0) {\n      countdownTimeout = setTimeout(function () {\n        setTime(time - 1);\n      }, 1000);\n    } else if (active && time == 0) {\n      startNewChallege();\n      setHasFinished(true);\n      resetCountdown();\n    }\n  }, [active, time]);\n  return /*#__PURE__*/_jsxDEV(CountdownContext.Provider, {\n    value: {\n      minutes: minutes,\n      seconds: seconds,\n      hasFinished: hasFinished,\n      active: active,\n      startCountdown: startCountdown,\n      resetCountdown: resetCountdown\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountdownProvider, \"6bDv1JIblYVRrogrvpHmYeWjAtU=\");\n\n_c = CountdownProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountdownProvider\");","map":{"version":3,"sources":["C:/Users/Ramon/Desktop/nlw_react-main/src/Contexts/CountDownContext.tsx"],"names":["createContext","useContext","useEffect","useState","ChallengesContext","CountdownContext","countdownTimeout","CountdownProvider","children","startNewChallege","time","setTime","active","setActive","hasFinished","setHasFinished","minutes","Math","floor","seconds","startCountdown","resetCountdown","clearTimeout","setTimeout"],"mappings":";;;;;AAAA,SACEA,aADF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,OANP;AAOA,SAASC,iBAAT,QAAkC,qBAAlC;AAeA,OAAO,IAAMC,gBAAgB,gBAAGL,aAAa,CAAC,EAAD,CAAtC;AAEP,IAAIM,gBAAJ;AAEA,OAAO,SAASC,iBAAT,OAAyC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,oBACjBP,UAAU,CAACG,iBAAD,CADO;AAAA,MACtCK,gBADsC,eACtCA,gBADsC;;AAAA,kBAGtBN,QAAQ,CAAC,OAAO,EAAR,CAHc;AAAA,MAGvCO,IAHuC;AAAA,MAGjCC,OAHiC;;AAAA,mBAIlBR,QAAQ,CAAC,KAAD,CAJU;AAAA,MAIvCS,MAJuC;AAAA,MAI/BC,SAJ+B;;AAAA,mBAKRV,QAAQ,CAAC,KAAD,CALA;AAAA,MAKvCW,WALuC;AAAA,MAK1BC,cAL0B;;AAO9C,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,GAAG,EAAlB,CAAhB;AACA,MAAMS,OAAO,GAAGT,IAAI,GAAG,EAAvB;;AAEA,WAASU,cAAT,GAA0B;AACxBP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASQ,cAAT,GAA0B;AACxBC,IAAAA,YAAY,CAAChB,gBAAD,CAAZ;AACAO,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,IAAAA,OAAO,CAAC,OAAO,EAAR,CAAP;AACD;;AAEDT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,MAAM,IAAIF,IAAI,GAAG,CAArB,EAAwB;AACtBJ,MAAAA,gBAAgB,GAAGiB,UAAU,CAAC,YAAM;AAClCZ,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,OAF4B,EAE1B,IAF0B,CAA7B;AAGD,KAJD,MAIO,IAAIE,MAAM,IAAIF,IAAI,IAAI,CAAtB,EAAyB;AAC9BD,MAAAA,gBAAgB;AAChBM,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAM,MAAAA,cAAc;AACf;AACF,GAVQ,EAUN,CAACT,MAAD,EAASF,IAAT,CAVM,CAAT;AAYA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,OAAO,EAAPA,OADK;AAELG,MAAAA,OAAO,EAAPA,OAFK;AAGLL,MAAAA,WAAW,EAAXA,WAHK;AAILF,MAAAA,MAAM,EAANA,MAJK;AAKLQ,MAAAA,cAAc,EAAdA,cALK;AAMLC,MAAAA,cAAc,EAAdA;AANK,KADT;AAAA,cAUGb;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA9CeD,iB;;KAAAA,iB","sourcesContent":["import {\r\n  createContext,\r\n  ReactNode,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { ChallengesContext } from \"./ChallengesContext\";\r\n\r\ninterface CountdownContextData {\r\n    minutes: number;\r\n    seconds: number;\r\n    hasFinished: boolean;\r\n    active: boolean;\r\n    startCountdown: () => void;\r\n    resetCountdown: () => void;\r\n}\r\n\r\ninterface CountdownProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const CountdownContext = createContext({} as CountdownContextData);\r\n\r\nlet countdownTimeout: NodeJS.Timeout;\r\n\r\nexport function CountdownProvider({ children }) {\r\n  const { startNewChallege } = useContext(ChallengesContext);\r\n\r\n  const [time, setTime] = useState(0.05 * 60);\r\n  const [active, setActive] = useState(false);\r\n  const [hasFinished, setHasFinished] = useState(false);\r\n\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = time % 60;\r\n\r\n  function startCountdown() {\r\n    setActive(true);\r\n  }\r\n\r\n  function resetCountdown() {\r\n    clearTimeout(countdownTimeout);\r\n    setActive(false);\r\n    setTime(0.05 * 60);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (active && time > 0) {\r\n      countdownTimeout = setTimeout(() => {\r\n        setTime(time - 1);\r\n      }, 1000);\r\n    } else if (active && time == 0) {\r\n      startNewChallege();\r\n      setHasFinished(true);\r\n      resetCountdown();\r\n    }\r\n  }, [active, time]);\r\n\r\n  return (\r\n    <CountdownContext.Provider\r\n      value={{\r\n        minutes,\r\n        seconds,\r\n        hasFinished,\r\n        active,\r\n        startCountdown,\r\n        resetCountdown,\r\n      }}\r\n    >\r\n      {children}\r\n    </CountdownContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}