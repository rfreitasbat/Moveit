{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ramon\\\\Desktop\\\\nlw_react-main\\\\src\\\\components\\\\Countdown.tsx\";\nimport { useContext } from \"react\";\nimport styles from \"../styles/components/Countdown.module.css\";\nexport function Countdown() {\n  const {} = useContext(CountdownContext);\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [seconfLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.countdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", minuteLeft, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", minuteRight, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", seconfLeft, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", secondRight, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), hasFinished ? /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: true,\n      className: styles.countdownButton,\n      children: [\"Ciclo Encerrado\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"icons/level.svg\",\n        alt: \"finished\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: active ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: `${styles.countdownButton} ${styles.countdownButtonActive}`,\n        onClick: resetCountdown,\n        children: [\"Abandonar Ciclo\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/close.svg\",\n          alt: \"finished\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: styles.countdownButton,\n        onClick: startCountdown,\n        children: \"Iniciar um ciclo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/Ramon/Desktop/nlw_react-main/src/components/Countdown.tsx"],"names":["useContext","styles","Countdown","CountdownContext","minuteLeft","minuteRight","String","minutes","padStart","split","seconfLeft","secondRight","seconds","countdownContainer","hasFinished","countdownButton","active","countdownButtonActive","resetCountdown","startCountdown"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,MAAP,MAAmB,2CAAnB;AAEA,OAAO,SAASC,SAAT,GAAqB;AAE1B,QAAM,KAAKF,UAAU,CAACG,gBAAD,CAArB;AAGA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BC,MAAM,CAACC,OAAD,CAAN,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AACA,QAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BL,MAAM,CAACM,OAAD,CAAN,CAAgBJ,QAAhB,CAAyB,CAAzB,EAA4B,GAA5B,EAAiCC,KAAjC,CAAuC,EAAvC,CAAlC;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAER,MAAM,CAACY,kBAAvB;AAAA,8BACE;AAAA,gCACE;AAAA,0BAAQT,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,0BAAQC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,0BAAQK,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,0BAAQC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGG,WAAW,gBACV;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,SAAS,EAAEb,MAAM,CAACc,eAAnC;AAAA,iDAEE;AAAK,QAAA,GAAG,EAAC,iBAAT;AAA2B,QAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAMV;AAAA,gBACGC,MAAM,gBACL;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAG,GAAEf,MAAM,CAACc,eAAgB,IAAGd,MAAM,CAACgB,qBAAsB,EAFvE;AAGE,QAAA,OAAO,EAAEC,cAHX;AAAA,mDAME;AAAK,UAAA,GAAG,EAAC,iBAAT;AAA2B,UAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADK,gBAUL;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAEjB,MAAM,CAACc,eAFpB;AAGE,QAAA,OAAO,EAAEI,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ,qBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD","sourcesContent":["import { useContext } from \"react\";\nimport styles from \"../styles/components/Countdown.module.css\";\n\nexport function Countdown() {\n\n  const {} = useContext(CountdownContext)\n  \n\n  const [minuteLeft, minuteRight] = String(minutes).padStart(2, \"0\").split(\"\");\n  const [seconfLeft, secondRight] = String(seconds).padStart(2, \"0\").split(\"\");\n\n  return (\n    <div>\n      <div className={styles.countdownContainer}>\n        <div>\n          <span> {minuteLeft} </span>\n          <span> {minuteRight} </span>\n        </div>\n        <span> : </span>\n        <div>\n          <span> {seconfLeft} </span>\n          <span> {secondRight} </span>\n        </div>\n      </div>\n\n      {hasFinished ? (\n        <button disabled className={styles.countdownButton}>\n          Ciclo Encerrado\n          <img src=\"icons/level.svg\" alt=\"finished\"/>\n        </button>\n      ) : (\n        <>\n          {active ? (\n            <button\n              type=\"button\"\n              className={`${styles.countdownButton} ${styles.countdownButtonActive}`}\n              onClick={resetCountdown}\n            >\n              Abandonar Ciclo\n              <img src=\"icons/close.svg\" alt=\"finished\"/>\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              className={styles.countdownButton}\n              onClick={startCountdown}\n            >\n              Iniciar um ciclo\n            </button>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}