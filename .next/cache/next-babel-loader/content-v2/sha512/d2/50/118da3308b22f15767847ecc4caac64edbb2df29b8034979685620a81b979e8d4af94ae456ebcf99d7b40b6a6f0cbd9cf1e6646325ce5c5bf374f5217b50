{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ramon\\\\Desktop\\\\nlw_react-main\\\\src\\\\Contexts\\\\ChallengesContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport challenges from \"../../challenges.json\";\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengesProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompletedes = _useState3[0],\n      setChallengesCompletedes = _useState3[1];\n\n  var _useState4 = useState(null),\n      activeChallenge = _useState4[0],\n      setActiveChallenge = _useState4[1];\n\n  var experienceToNextLevel = Math.pow((level + 1) * 4, 2);\n  useEffect(function () {\n    Notification.requestPermission();\n  }, []);\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallege() {\n    var randomChallengeIndex = Math.floor(Math.random() * challenges.length);\n    var challenge = challenges[randomChallengeIndex];\n    setActiveChallenge(challenge);\n  }\n\n  function resetChallenge() {\n    setActiveChallenge(null);\n  }\n\n  function completeChallange() {\n    if (!activeChallenge) {\n      return;\n    }\n\n    var amount = activeChallenge.amount;\n    var finalExperiece = currentExperience + amount;\n\n    if (finalExperiece >= experienceToNextLevel) {\n      finalExperiece = finalExperiece - experienceToNextLevel;\n      levelUp();\n    }\n\n    setCurrentExperience(finalExperiece);\n    setActiveChallenge(null);\n    setChallengesCompletedes(challengesCompletedes + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompletedes: challengesCompletedes,\n      experienceToNextLevel: experienceToNextLevel,\n      activeChallenge: activeChallenge,\n      levelUp: levelUp,\n      startNewChallege: startNewChallege,\n      resetChallenge: resetChallenge,\n      completeChallange: completeChallange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengesProvider, \"yAtwkPOoE+6tpqPqxgq0e/bvAJA=\");\n\n_c = ChallengesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengesProvider\");","map":{"version":3,"sources":["C:/Users/Ramon/Desktop/nlw_react-main/src/Contexts/ChallengesContext.tsx"],"names":["createContext","useEffect","useState","challenges","ChallengesContext","ChallengesProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompletedes","setChallengesCompletedes","activeChallenge","setActiveChallenge","experienceToNextLevel","Math","pow","Notification","requestPermission","levelUp","startNewChallege","randomChallengeIndex","floor","random","length","challenge","resetChallenge","completeChallange","amount","finalExperiece"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,OAAO,IAAMC,iBAAiB,gBAAGJ,aAAa,CAAC,EAAD,CAAvC;AAwBP,OAAO,SAASK,kBAAT,OAAoE;AAAA;;AAAA,MAArCC,QAAqC,QAArCA,QAAqC;;AAAA,kBAC7CJ,QAAQ,CAAC,CAAD,CADqC;AAAA,MAChEK,KADgE;AAAA,MACzDC,QADyD;;AAAA,mBAErBN,QAAQ,CAAC,CAAD,CAFa;AAAA,MAEhEO,iBAFgE;AAAA,MAE7CC,oBAF6C;;AAAA,mBAGbR,QAAQ,CAAC,CAAD,CAHK;AAAA,MAGhES,qBAHgE;AAAA,MAGzCC,wBAHyC;;AAAA,mBAIzBV,QAAQ,CAAC,IAAD,CAJiB;AAAA,MAIhEW,eAJgE;AAAA,MAI/CC,kBAJ+C;;AAMvE,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,GAAL,CAAS,CAACV,KAAK,GAAG,CAAT,IAAc,CAAvB,EAA0B,CAA1B,CAA9B;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACZiB,IAAAA,YAAY,CAACC,iBAAb;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASC,OAAT,GAAmB;AACjBZ,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,WAASc,gBAAT,GAA4B;AACxB,QAAMC,oBAAoB,GAAGN,IAAI,CAACO,KAAL,CAAYP,IAAI,CAACQ,MAAL,KAAgBrB,UAAU,CAACsB,MAAvC,CAA7B;AACA,QAAMC,SAAS,GAAGvB,UAAU,CAACmB,oBAAD,CAA5B;AAEAR,IAAAA,kBAAkB,CAACY,SAAD,CAAlB;AACH;;AAED,WAASC,cAAT,GAA0B;AACtBb,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAED,WAASc,iBAAT,GAA6B;AACzB,QAAG,CAACf,eAAJ,EAAqB;AACjB;AACH;;AAHwB,QAKjBgB,MALiB,GAKNhB,eALM,CAKjBgB,MALiB;AAOzB,QAAIC,cAAc,GAAGrB,iBAAiB,GAAGoB,MAAzC;;AAEA,QAAKC,cAAc,IAAIf,qBAAvB,EAA+C;AAC3Ce,MAAAA,cAAc,GAAGA,cAAc,GAAGf,qBAAlC;AACAK,MAAAA,OAAO;AACV;;AAEDV,IAAAA,oBAAoB,CAACoB,cAAD,CAApB;AACAhB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAF,IAAAA,wBAAwB,CAACD,qBAAqB,GAAG,CAAzB,CAAxB;AAEH;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAC/BJ,MAAAA,KAAK,EAALA,KAD+B;AAE/BE,MAAAA,iBAAiB,EAAjBA,iBAF+B;AAG/BE,MAAAA,qBAAqB,EAArBA,qBAH+B;AAI/BI,MAAAA,qBAAqB,EAArBA,qBAJ+B;AAK/BF,MAAAA,eAAe,EAAfA,eAL+B;AAM/BO,MAAAA,OAAO,EAAPA,OAN+B;AAO/BC,MAAAA,gBAAgB,EAAhBA,gBAP+B;AAQ/BM,MAAAA,cAAc,EAAdA,cAR+B;AAS/BC,MAAAA,iBAAiB,EAAjBA;AAT+B,KAAnC;AAAA,cAWKtB;AAXL;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA9DeD,kB;;KAAAA,kB","sourcesContent":["import { createContext, ReactNode, useEffect, useState } from \"react\"\nimport challenges from \"../../challenges.json\"\n\nexport const ChallengesContext = createContext({} as ChallengesContexData);\n\ninterface ChallengesProviderProps {\n    children: ReactNode\n}\n\ninterface Challenge {\n    type: 'body' | 'eye';\n    description: string;\n    amount: number;\n}\n\ninterface ChallengesContexData {\n    level: number;\n    currentExperience: number; \n    challengesCompletedes: number;\n    experienceToNextLevel: number;\n    activeChallenge: Challenge;\n    levelUp: () => void;\n    startNewChallege: () => void;\n    resetChallenge: () => void;\n    completeChallange: () => void;\n}\n\nexport function ChallengesProvider ({ children }: ChallengesProviderProps) {\n    const [level, setLevel] = useState(1);\n    const [currentExperience, setCurrentExperience] = useState(0);\n    const [challengesCompletedes, setChallengesCompletedes] = useState(0);\n    const [activeChallenge, setActiveChallenge] = useState(null);\n\n    const experienceToNextLevel = Math.pow((level + 1) * 4, 2)\n\n    useEffect(() => {\n        Notification.requestPermission();\n    }, [])\n\n    function levelUp() {\n      setLevel(level + 1)\n    }\n\n    function startNewChallege() {\n        const randomChallengeIndex = Math.floor( Math.random() * challenges.length )\n        const challenge = challenges[randomChallengeIndex];\n\n        setActiveChallenge(challenge)\n    }\n\n    function resetChallenge() {\n        setActiveChallenge(null)\n    }\n\n    function completeChallange() {\n        if(!activeChallenge) {\n            return;\n        }\n\n        const { amount } = activeChallenge;\n\n        let finalExperiece = currentExperience + amount;   \n        \n        if ( finalExperiece >= experienceToNextLevel ) {\n            finalExperiece = finalExperiece - experienceToNextLevel;\n            levelUp();\n        }\n\n        setCurrentExperience(finalExperiece);\n        setActiveChallenge(null);\n        setChallengesCompletedes(challengesCompletedes + 1);\n\n    }\n\n    return (\n        <ChallengesContext.Provider value={{ \n            level, \n            currentExperience, \n            challengesCompletedes,\n            experienceToNextLevel, \n            activeChallenge,\n            levelUp,\n            startNewChallege,\n            resetChallenge,\n            completeChallange\n        }}>\n            {children}\n        </ChallengesContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}